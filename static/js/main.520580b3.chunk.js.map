{"version":3,"sources":["components/GoogleFonts.tsx","fonts.js","components/Controls.tsx","components/Converter.tsx","components/Paragraph.tsx","components/H1.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["GoogleFonts","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","font","concat","fonts","toConsumableArray","Set","join","replace","_this","weightedFonts","props","usedFonts","map","addWeights","formattedFonts","formatFontsUrl","react_default","a","createElement","Helmet","href","rel","React","Component","Fonts","Controls","_getPrototypeOf2","_len","length","args","Array","_key","call","state","showColorPicker","setState","attr","_this$props","handleChange","style","objectSpread","defineProperty","_this2","_this$props$style","fontSize","color","fontStyle","fontWeight","textTransform","textDecoration","textAlign","lineHeight","letterSpacing","wordSpacing","whiteSpace","fontFamily","className","type","onChange","e","Number","target","onClick","toggleColorPicker","lib","hex","Converter","property","toLowerCase","formatProperty","tag","properties","keys","Fragment","p","i","renderProperty","renderTag","Paragraph","H1","baseStyle","Boolean","window","location","hostname","match","ReactDOM","render","_useState","useState","_useState2","slicedToArray","h1","setH1","_useState3","_useState4","paragraph","setParagraph","GoogleFonts_GoogleFonts","Controls_Controls","H1_H1","Paragraph_Paragraph","Converter_Converter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oOAGaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,aAAAC,MAAA,SACaC,GAGT,SAAAC,OAAUD,EAAV,KAAAC,OAFgB,yCAFpB,CAAAH,IAAA,iBAAAC,MAAA,SAOiBG,GACb,OAAOb,OAAAc,EAAA,EAAAd,CAAI,IAAIe,IAAIF,IAAQG,KAAK,KAAKC,QAAQ,MAAO,OARxD,CAAAR,IAAA,SAAAC,MAAA,WAWW,IAAAQ,EAAAhB,KAEDiB,EADgBjB,KAAKkB,MAAnBC,UACwBC,IAAI,SAAAX,GAAI,OAAIO,EAAKK,WAAWZ,KACtDa,EAAiBtB,KAAKuB,eAAeN,GAE3C,OACEO,EAAAC,EAAAC,cAACC,EAAA,OAAD,KACEH,EAAAC,EAAAC,cAAA,QACEE,KAAI,2CAAAlB,OAA6CY,GACjDO,IAAI,oBApBdjC,EAAA,CAAiCkC,IAAMC,2BCH1BC,EAAQ,CACnB,WACA,QACA,2BACA,gBACA,kBACA,UACA,WACA,QACA,sBACA,QACA,WACA,OACA,QACA,UACA,UACA,UACA,QACA,cACA,aACA,gBACA,UACA,OACA,QACA,iBACA,SACA,YACA,QACA,aACA,SACA,qBACA,oBACA,QACA,OACA,cACA,QACA,SACA,UACA,wBACA,eACA,eACA,UACA,SACA,SACA,iBACA,uBACA,gBACA,aACA,kBACA,cACA,cACA,gBACA,mBACA,QACA,eACA,MACA,iBACA,aACA,wBACA,eACA,SACA,kBACA,kBACA,iBACA,cACA,eACA,kBACA,qBACA,sBACA,yBACA,kBACA,qBACA,uBACA,0BACA,uBACA,0BACA,eACA,gBACA,YACA,eACA,eACA,SACA,OACA,oBACA,0BACA,UACA,QACA,SACA,QACA,SACA,kBACA,OACA,gBACA,SACA,YACA,UACA,cACA,OACA,wBACA,oBACA,eACA,gBACA,OACA,YACA,SACA,gBACA,SACA,eACA,cACA,WACA,mBACA,YACA,iBACA,WACA,UACA,yBACA,OACA,SACA,SACA,aACA,YACA,SACA,WACA,YACA,YACA,YACA,aACA,cACA,YACA,cACA,SACA,0BACA,kBACA,sBACA,WACA,SACA,mBACA,gBACA,WACA,eACA,cACA,mBACA,cACA,OACA,mBACA,UACA,UACA,iBACA,WACA,mBACA,UACA,eACA,oBACA,SACA,UACA,YACA,YACA,UACA,iBACA,aACA,qBACA,SACA,aACA,WACA,UACA,SACA,UACA,gBACA,kBACA,sBACA,YACA,qBACA,YACA,YACA,aACA,uBACA,qBACA,QACA,SACA,QACA,UACA,iBACA,qBACA,SACA,eACA,QACA,WACA,QACA,0BACA,WACA,kBACA,WACA,oBACA,aACA,UCpLWC,EAAb,SAAApC,GAAA,SAAAoC,IAAA,IAAAC,EAAAlB,EAAAlB,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,GAAA,QAAAE,EAAA/B,UAAAgC,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAnC,UAAAmC,GAAA,OAAAvB,EAAAlB,OAAAG,EAAA,EAAAH,CAAAE,MAAAkC,EAAApC,OAAAI,EAAA,EAAAJ,CAAAmC,IAAAO,KAAArC,MAAA+B,EAAA,CAAAlC,MAAAU,OAAA2B,MACEI,MAAQ,CACNC,iBAAiB,GAFrB1B,EAAA,OAAAlB,OAAAO,EAAA,EAAAP,CAAAmC,EAAApC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmC,EAAA,EAAA1B,IAAA,oBAAAC,MAAA,WAMIR,KAAK2C,SAAS,CAAED,iBAAkB1C,KAAKyC,MAAMC,oBANjD,CAAAnC,IAAA,eAAAC,MAAA,SASeoC,EAAcpC,GAAwB,IAAAqC,EACjB7C,KAAKkB,MAA7B4B,EADyCD,EACzCC,aAAcC,EAD2BF,EAC3BE,MAEtBD,EAAahD,OAAAkD,EAAA,EAAAlD,CAAA,GAAKiD,EAANjD,OAAAmD,EAAA,EAAAnD,CAAA,GAAc8C,EAAOpC,OAZrC,CAAAD,IAAA,SAAAC,MAAA,WAeW,IAAA0C,EAAAlD,KAAAmD,EAcHnD,KAAKkB,MAAM6B,MAZbK,EAFKD,EAELC,SACAC,EAHKF,EAGLE,MACAC,EAJKH,EAILG,UACAC,EALKJ,EAKLI,WACAC,EANKL,EAMLK,cACAC,EAPKN,EAOLM,eACAC,EARKP,EAQLO,UACAC,EATKR,EASLQ,WACAC,EAVKT,EAULS,cACAC,EAXKV,EAWLU,YACAC,EAZKX,EAYLW,WACAC,EAbKZ,EAaLY,WAGF,OACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEsC,UAAU,WACVC,KAAK,SACLzD,MAAO4C,EACPc,SAAU,SAAAC,GAAC,OACTjB,EAAKJ,aAAa,WAAYsB,OAAOD,EAAEE,OAAO7D,YAKpDgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACEsC,UAAU,qBACVM,QAAS,kBAAMpB,EAAKqB,sBAFtB,sBAMCvE,KAAKyC,MAAMC,iBACVlB,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,eACbxC,EAAAC,EAAAC,cAAC8C,EAAA,aAAD,CACEnB,MAAOA,EACPa,SAAU,SAAAb,GAAK,OAAIH,EAAKJ,aAAa,QAASO,EAAMoB,UAM5DjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAOuD,EACPG,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,aAAcqB,EAAEE,OAAO7D,SAEvDwB,EAAMZ,IAAI,SAAAX,GAAI,OACbe,EAAAC,EAAAC,cAAA,UAAQnB,IAAKE,EAAMD,MAAOC,GACvBA,OAMTe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAO8C,EACPY,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,YAAaqB,EAAEE,OAAO7D,SAEvDgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,UAAd,UACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,UAAd,UACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,WAAd,aAIJgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAO+C,EACPW,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,aAAcqB,EAAEE,OAAO7D,SAExDgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,cACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,qBACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,eACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,gBACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,gBACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,mBACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,cACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,oBACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,iBAGJgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAOgD,EACPU,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,gBAAiBqB,EAAEE,OAAO7D,SAE3DgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,QAAd,QACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,aAAd,aACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,aAAd,aACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,cAAd,cACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,cAAd,gBAIJgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAOiD,EACPS,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,iBAAkBqB,EAAEE,OAAO7D,SAE5DgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,QAAd,QACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,aAAd,aACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,YAAd,YACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,gBAAd,kBAIJgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAOkD,EACPQ,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,YAAaqB,EAAEE,OAAO7D,SAEvDgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,QAAd,QACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,SAAd,SACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,UAAd,UACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,WAAd,aAIJgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACEsC,UAAU,aACVC,KAAK,SACLzD,MAAOmD,EACPO,SAAU,SAAAC,GAAC,OACTjB,EAAKJ,aAAa,aAAcsB,OAAOD,EAAEE,OAAO7D,YAKtDgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SACEsC,UAAU,gBACVC,KAAK,SACLzD,MAAOoD,EACPM,SAAU,SAAAC,GAAC,OACTjB,EAAKJ,aAAa,gBAAiBsB,OAAOD,EAAEE,OAAO7D,YAKzDgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SACEsC,UAAU,cACVC,KAAK,SACLzD,MAAOqD,EACPK,SAAU,SAAAC,GAAC,OACTjB,EAAKJ,aAAa,cAAesB,OAAOD,EAAEE,OAAO7D,YAKvDgB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,UACElB,MAAOsD,EACPI,SAAU,SAAAC,GAAC,OAAIjB,EAAKJ,aAAa,aAAcqB,EAAEE,OAAO7D,SAExDgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,UAAd,UACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,UAAd,UACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,OAAd,OACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,YAAd,YACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,YAAd,YACAgB,EAAAC,EAAAC,cAAA,UAAQlB,MAAM,gBAAd,uBAjMZyB,EAAA,CAA8BH,IAAMC,WCXvB2C,EAAb,SAAA7E,GAAA,SAAA6E,IAAA,OAAA5E,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,GAAA5E,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA4E,EAAA7E,GAAAC,OAAAQ,EAAA,EAAAR,CAAA4E,EAAA,EAAAnE,IAAA,iBAAAC,MAAA,SACiBmE,GACb,OAAOA,EAAS5D,QAAQ,uBAAwB,OAAO6D,gBAF3D,CAAArE,IAAA,iBAAAC,MAAA,SAKiBmE,EAAkBnE,EAAwBD,GACvD,OACEiB,EAAAC,EAAAC,cAAA,QAAMnB,IAAKA,GAAX,WAEGP,KAAK6E,eAAeF,GAFvB,KAEoCnE,KAT1C,CAAAD,IAAA,YAAAC,MAAA,SAcYsE,GAAa,IAAA9D,EAAAhB,KACf+C,EAAe/C,KAAKkB,MAAM4D,GAC1BC,EAAuBjF,OAAOkF,KAAKjC,GAEzC,OACEvB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,SAAP,KACEzD,EAAAC,EAAAC,cAAA,YAAOoD,EAAM,MACZC,EAAW3D,IAAI,SAAC8D,EAAGC,GAAJ,OAAUnE,EAAKoE,eAAeF,EAAGnC,EAAMmC,GAAIC,KAC3D3D,EAAAC,EAAAC,cAAA,YAAO,SAtBf,CAAAnB,IAAA,SAAAC,MAAA,WA2BW,IAAA0C,EAAAlD,KAGP,MAFuB,CAAC,KAAM,KAElBoB,IAAI,SAAC0D,EAAKK,GAAN,OACd3D,EAAAC,EAAAC,cAAA,OAAKnB,IAAK4E,EAAGnB,UAAW,OAASc,GAC9B5B,EAAKmC,UAAUP,UAhCxBJ,EAAA,CAA+B5C,IAAMC,WCAxBuD,EAAb,SAAAzF,GAAA,SAAAyF,IAAA,OAAAxF,OAAAC,EAAA,EAAAD,CAAAE,KAAAsF,GAAAxF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwF,GAAAnF,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAwF,EAAAzF,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwF,EAAA,EAAA/E,IAAA,SAAAC,MAAA,WAEI,OACEgB,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,aACbxC,EAAAC,EAAAC,cAAA,KAAGqB,MAAKjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAOE,KAAKkB,MAAM6B,QAA1B,ilBAJRuC,EAAA,CAA+BxD,IAAMC,WCAxBwD,EAAb,SAAA1F,GAAA,SAAA0F,IAAA,OAAAzF,OAAAC,EAAA,EAAAD,CAAAE,KAAAuF,GAAAzF,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyF,GAAApF,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAyF,EAAA1F,GAAAC,OAAAQ,EAAA,EAAAR,CAAAyF,EAAA,EAAAhF,IAAA,SAAAC,MAAA,WAEI,OACEgB,EAAAC,EAAAC,cAAA,OAAKsC,UAAU,MACbxC,EAAAC,EAAAC,cAAA,MAAIqB,MAAKjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAOE,KAAKkB,MAAM6B,QAA3B,0BAJRwC,EAAA,CAAwBzD,IAAMC,WCGxByD,UAAY,CAChBnC,MAAO,OACPC,UAAW,SACXC,WAAY,MACZC,cAAe,OACfC,eAAgB,OAChBC,UAAW,OACXC,WAAY,IACZC,cAAe,EACfC,YAAa,EACbC,WAAY,SACZC,WAAY,cCLM0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOvE,EAAAC,EAAAC,cFeD,WAAM,IAAAsE,EACCC,mBAAQnG,OAAAkD,EAAA,EAAAlD,CAAA,GACvB0F,EADuB,CAE1BpC,SAAU,GACVG,WAAY,SAJK2C,EAAApG,OAAAqG,EAAA,EAAArG,CAAAkG,EAAA,GACZI,EADYF,EAAA,GACRG,EADQH,EAAA,GAAAI,EAMeL,mBAAQnG,OAAAkD,EAAA,EAAAlD,CAAA,GACrC0F,EADqC,CAExCpC,SAAU,MAROmD,EAAAzG,OAAAqG,EAAA,EAAArG,CAAAwG,EAAA,GAMZE,EANYD,EAAA,GAMDE,EANCF,EAAA,GAWnB,OACE/E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgF,EAAD,CAAavF,UAAW,CAACiF,EAAGrC,WAAYyC,EAAUzC,cAElDvC,EAAAC,EAAAC,cAACiF,EAAD,CAAU5D,MAAOqD,EAAItD,aAAcuD,IACnC7E,EAAAC,EAAAC,cAACkF,EAAD,CAAI7D,MAAOqD,IAEX5E,EAAAC,EAAAC,cAACiF,EAAD,CAAU5D,MAAOyD,EAAW1D,aAAc2D,IAC1CjF,EAAAC,EAAAC,cAACmF,EAAD,CAAW9D,MAAOyD,IAElBhF,EAAAC,EAAAC,cAACoF,EAAD,CAAWV,GAAIA,EAAIlB,EAAGsB,MEpCZ,MAASO,SAASC,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.520580b3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport class GoogleFonts extends React.Component<{ usedFonts: string[] }, {}> {\n  addWeights(font: string) {\n    const weights = \"100,200,300,400,500,600,700,800,900\";\n\n    return `${font}:${weights}`;\n  }\n\n  formatFontsUrl(fonts: string[]) {\n    return [...new Set(fonts)].join(\"|\").replace(/\\s/g, \"+\");\n  }\n\n  render() {\n    const { usedFonts } = this.props;\n    const weightedFonts = usedFonts.map(font => this.addWeights(font));\n    const formattedFonts = this.formatFontsUrl(weightedFonts);\n\n    return (\n      <Helmet>\n        <link\n          href={`https://fonts.googleapis.com/css?family=${formattedFonts}`}\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n    );\n  }\n}\n","export const Fonts = [\n  \"Aclonica\",\n  \"Allan\",\n  \"Annie Use Your Telescope\",\n  \"Anonymous Pro\",\n  \"Allerta Stencil\",\n  \"Allerta\",\n  \"Amaranth\",\n  \"Anton\",\n  \"Architects Daughter\",\n  \"Arimo\",\n  \"Artifika\",\n  \"Arvo\",\n  \"Asset\",\n  \"Astloch\",\n  \"Bangers\",\n  \"Bentham\",\n  \"Bevan\",\n  \"Bigshot One\",\n  \"Bowlby One\",\n  \"Bowlby One SC\",\n  \"Brawler\",\n  \"Buda\",\n  \"Cabin\",\n  \"Calligraffitti\",\n  \"Candal\",\n  \"Cantarell\",\n  \"Cardo\",\n  \"Carter One\",\n  \"Caudex\",\n  \"Cedarville Cursive\",\n  \"Cherry Cream Soda\",\n  \"Chewy\",\n  \"Coda\",\n  \"Coming Soon\",\n  \"Copse\",\n  \"Corben\",\n  \"Cousine\",\n  \"Covered By Your Grace\",\n  \"Crafty Girls\",\n  \"Crimson Text\",\n  \"Crushed\",\n  \"Cuprum\",\n  \"Damion\",\n  \"Dancing Script\",\n  \"Dawning of a New Day\",\n  \"Didact Gothic\",\n  \"Droid Sans\",\n  \"Droid Sans Mono\",\n  \"Droid Serif\",\n  \"EB Garamond\",\n  \"Expletus Sans\",\n  \"Fontdiner Swanky\",\n  \"Forum\",\n  \"Francois One\",\n  \"Geo\",\n  \"Give You Glory\",\n  \"Goblin One\",\n  \"Goudy Bookletter 1911\",\n  \"Gravitas One\",\n  \"Gruppo\",\n  \"Hammersmith One\",\n  \"Holtwood One SC\",\n  \"Homemade Apple\",\n  \"Inconsolata\",\n  \"Indie Flower\",\n  \"IM Fell DW Pica\",\n  \"IM Fell DW Pica SC\",\n  \"IM Fell Double Pica\",\n  \"IM Fell Double Pica SC\",\n  \"IM Fell English\",\n  \"IM Fell English SC\",\n  \"IM Fell French Canon\",\n  \"IM Fell French Canon SC\",\n  \"IM Fell Great Primer\",\n  \"IM Fell Great Primer SC\",\n  \"Irish Grover\",\n  \"Irish Growler\",\n  \"Istok Web\",\n  \"Josefin Sans\",\n  \"Josefin Slab\",\n  \"Judson\",\n  \"Jura\",\n  \"Just Another Hand\",\n  \"Just Me Again Down Here\",\n  \"Kameron\",\n  \"Kenia\",\n  \"Kranky\",\n  \"Kreon\",\n  \"Kristi\",\n  \"La Belle Aurore\",\n  \"Lato\",\n  \"League Script\",\n  \"Lekton\",\n  \"Limelight\",\n  \"Lobster\",\n  \"Lobster Two\",\n  \"Lora\",\n  \"Love Ya Like A Sister\",\n  \"Loved by the King\",\n  \"Luckiest Guy\",\n  \"Maiden Orange\",\n  \"Mako\",\n  \"Maven Pro\",\n  \"Meddon\",\n  \"MedievalSharp\",\n  \"Megrim\",\n  \"Merriweather\",\n  \"Metrophobic\",\n  \"Michroma\",\n  \"Miltonian Tattoo\",\n  \"Miltonian\",\n  \"Modern Antiqua\",\n  \"Monofett\",\n  \"Molengo\",\n  \"Mountains of Christmas\",\n  \"Muli\",\n  \"Neucha\",\n  \"Neuton\",\n  \"News Cycle\",\n  \"Nixie One\",\n  \"Nobile\",\n  \"Nova Cut\",\n  \"Nova Flat\",\n  \"Nova Mono\",\n  \"Nova Oval\",\n  \"Nova Round\",\n  \"Nova Script\",\n  \"Nova Slim\",\n  \"Nova Square\",\n  \"Nunito\",\n  \"OFL Sorts Mill Goudy TT\",\n  \"Old Standard TT\",\n  \"Open Sans Condensed\",\n  \"Orbitron\",\n  \"Oswald\",\n  \"Over the Rainbow\",\n  \"Reenie Beanie\",\n  \"Pacifico\",\n  \"Patrick Hand\",\n  \"Paytone One\",\n  \"Permanent Marker\",\n  \"Philosopher\",\n  \"Play\",\n  \"Playfair Display\",\n  \"Podkova\",\n  \"PT Sans\",\n  \"PT Sans Narrow\",\n  \"PT Serif\",\n  \"PT Serif Caption\",\n  \"Puritan\",\n  \"Quattrocento\",\n  \"Quattrocento Sans\",\n  \"Radley\",\n  \"Raleway\",\n  \"Redressed\",\n  \"Rock Salt\",\n  \"Rokkitt\",\n  \"Ruslan Display\",\n  \"Schoolbell\",\n  \"Shadows Into Light\",\n  \"Shanti\",\n  \"Sigmar One\",\n  \"Six Caps\",\n  \"Slackey\",\n  \"Smythe\",\n  \"Sniglet\",\n  \"Special Elite\",\n  \"Stardos Stencil\",\n  \"Sue Ellen Francisco\",\n  \"Sunshiney\",\n  \"Swanky and Moo Moo\",\n  \"Syncopate\",\n  \"Tangerine\",\n  \"Tenor Sans\",\n  \"Terminal Dosis Light\",\n  \"The Girl Next Door\",\n  \"Tinos\",\n  \"Ubuntu\",\n  \"Ultra\",\n  \"Unkempt\",\n  \"UnifrakturCook\",\n  \"UnifrakturMaguntia\",\n  \"Varela\",\n  \"Varela Round\",\n  \"Vibur\",\n  \"Vollkorn\",\n  \"VT323\",\n  \"Waiting for the Sunrise\",\n  \"Wallpoet\",\n  \"Walter Turncoat\",\n  \"Wire One\",\n  \"Yanone Kaffeesatz\",\n  \"Yeseva One\",\n  \"Zeyada\"\n];\n","import React from \"react\";\nimport { ChromePicker } from \"react-color\";\nimport { Style } from \"./../interfaces\";\nimport { Fonts } from \"../fonts\";\n\ninterface State {\n  showColorPicker: boolean;\n}\n\ninterface Props {\n  handleChange: ((value: Style) => void);\n  style: Style;\n}\n\nexport class Controls extends React.Component<Props, State> {\n  state = {\n    showColorPicker: false\n  };\n\n  toggleColorPicker() {\n    this.setState({ showColorPicker: !this.state.showColorPicker });\n  }\n\n  handleChange(attr: string, value: string | number) {\n    const { handleChange, style } = this.props;\n\n    handleChange({ ...style, [attr]: value });\n  }\n\n  render() {\n    const {\n      fontSize,\n      color,\n      fontStyle,\n      fontWeight,\n      textTransform,\n      textDecoration,\n      textAlign,\n      lineHeight,\n      letterSpacing,\n      wordSpacing,\n      whiteSpace,\n      fontFamily\n    } = this.props.style;\n\n    return (\n      <div>\n        <div>\n          <label>Size</label>\n          <input\n            className=\"fontSize\"\n            type=\"number\"\n            value={fontSize}\n            onChange={e =>\n              this.handleChange(\"fontSize\", Number(e.target.value))\n            }\n          />\n        </div>\n\n        <div>\n          <label>Color</label>\n          <button\n            className=\"toggle-colorpicker\"\n            onClick={() => this.toggleColorPicker()}\n          >\n            Toggle colorpicker\n          </button>\n          {this.state.showColorPicker && (\n            <div className=\"colorpicker\">\n              <ChromePicker\n                color={color}\n                onChange={color => this.handleChange(\"color\", color.hex)}\n              />\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label>fontFamily</label>\n          <select\n            value={fontFamily}\n            onChange={e => this.handleChange(\"fontFamily\", e.target.value)}\n          >\n            {Fonts.map(font => (\n              <option key={font} value={font}>\n                {font}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div>\n          <label>fontStyle</label>\n          <select\n            value={fontStyle}\n            onChange={e => this.handleChange(\"fontStyle\", e.target.value)}\n          >\n            <option value=\"normal\">Normal</option>\n            <option value=\"italic\">Italic</option>\n            <option value=\"oblique\">Oblique</option>\n          </select>\n        </div>\n\n        <div>\n          <label>fontWeight</label>\n          <select\n            value={fontWeight}\n            onChange={e => this.handleChange(\"fontWeight\", e.target.value)}\n          >\n            <option value=\"100\">100 (thin)</option>\n            <option value=\"200\">200 (extra light)</option>\n            <option value=\"300\">300 (light)</option>\n            <option value=\"400\">400 (normal)</option>\n            <option value=\"500\">500 (medium)</option>\n            <option value=\"600\">600 (semi bold)</option>\n            <option value=\"700\">700 (bold)</option>\n            <option value=\"800\">800 (extra bold)</option>\n            <option value=\"900\">900 (black)</option>\n          </select>\n        </div>\n        <div>\n          <label>textTransform</label>\n          <select\n            value={textTransform}\n            onChange={e => this.handleChange(\"textTransform\", e.target.value)}\n          >\n            <option value=\"none\">none</option>\n            <option value=\"uppercase\">uppercase</option>\n            <option value=\"lowercase\">lowercase</option>\n            <option value=\"capitalize\">capitalize</option>\n            <option value=\"full-width\">full-width</option>\n          </select>\n        </div>\n\n        <div>\n          <label>textDecoration</label>\n          <select\n            value={textDecoration}\n            onChange={e => this.handleChange(\"textDecoration\", e.target.value)}\n          >\n            <option value=\"none\">none</option>\n            <option value=\"underline\">underline</option>\n            <option value=\"overline\">overline</option>\n            <option value=\"line-through\">line-through</option>\n          </select>\n        </div>\n\n        <div>\n          <label>textAlign</label>\n          <select\n            value={textAlign}\n            onChange={e => this.handleChange(\"textAlign\", e.target.value)}\n          >\n            <option value=\"left\">left</option>\n            <option value=\"right\">right</option>\n            <option value=\"center\">center</option>\n            <option value=\"justify\">justify</option>\n          </select>\n        </div>\n\n        <div>\n          <label>lineHeight</label>\n          <input\n            className=\"lineHeight\"\n            type=\"number\"\n            value={lineHeight}\n            onChange={e =>\n              this.handleChange(\"lineHeight\", Number(e.target.value))\n            }\n          />\n        </div>\n\n        <div>\n          <label>letterSpacing</label>\n          <input\n            className=\"letterSpacing\"\n            type=\"number\"\n            value={letterSpacing}\n            onChange={e =>\n              this.handleChange(\"letterSpacing\", Number(e.target.value))\n            }\n          />\n        </div>\n\n        <div>\n          <label>wordSpacing</label>\n          <input\n            className=\"wordSpacing\"\n            type=\"number\"\n            value={wordSpacing}\n            onChange={e =>\n              this.handleChange(\"wordSpacing\", Number(e.target.value))\n            }\n          />\n        </div>\n\n        <div>\n          <label>whiteSpace</label>\n          <select\n            value={whiteSpace}\n            onChange={e => this.handleChange(\"whiteSpace\", e.target.value)}\n          >\n            <option value=\"normal\">normal</option>\n            <option value=\"nowrap\">nowrap</option>\n            <option value=\"pre\">pre</option>\n            <option value=\"pre-wrap\">pre-wrap</option>\n            <option value=\"pre-line\">pre-line</option>\n            <option value=\"break-spaces\">break-spaces</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Style } from \"./../interfaces\";\n\nexport class Converter extends React.Component<{ [key: string]: Style }, {}> {\n  formatProperty(property: string) {\n    return property.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1-\").toLowerCase();\n  }\n\n  renderProperty(property: string, value: string | number, key: number) {\n    return (\n      <span key={key}>\n        &nbsp;&nbsp;\n        {this.formatProperty(property)}: {value}\n      </span>\n    );\n  }\n\n  renderTag(tag: string) {\n    const style: Style = this.props[tag];\n    const properties: string[] = Object.keys(style);\n\n    return (\n      <React.Fragment>\n        <span>{tag + \" {\"}</span>\n        {properties.map((p, i) => this.renderProperty(p, style[p], i))}\n        <span>{\" }\"}</span>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const tags: string[] = [\"h1\", \"p\"];\n\n    return tags.map((tag, i) => (\n      <div key={i} className={\"tag \" + tag}>\n        {this.renderTag(tag)}\n      </div>\n    ));\n  }\n}\n","import React from \"react\";\nimport { Style } from \"../interfaces\";\n\nexport class Paragraph extends React.Component<{ style: Style }, {}> {\n  render() {\n    return (\n      <div className=\"paragraph\">\n        <p style={{ ...this.props.style }}>\n          Pommy ipsum shepherd's pie full English breakast chips have a\n          butcher's at this therewith air one's dirty linen, unhand me sir Kate\n          and Will loo bugger driving a mini a cuppa. Alright geezer ever so bow\n          ties are cool have a gander yorkshire pudding give you a bell\n          slappers, picalilly Sonic Screwdriver at the boozer baffled see a man\n          about a dog flabbergasted, chin up bowler hat porky-pies River Song\n          got a lot of brass. Ey up bloody mary The Doctor black cab lass pork\n          dripping yorkshire mixture cotton on, in the jacksy bag egg's old boy\n          a cuppa shortbread spam fritters squirrel.\n        </p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Style } from \"../interfaces\";\n\nexport class H1 extends React.Component<{ style: Style }, {}> {\n  render() {\n    return (\n      <div className=\"h1\">\n        <h1 style={{ ...this.props.style }}>Ey up bloody mary</h1>\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { GoogleFonts, Controls, Converter, H1, Paragraph } from \"./components\";\n\nimport { Style } from \"./interfaces\";\nimport \"./App.css\";\n\nconst baseStyle = {\n  color: \"#111\",\n  fontStyle: \"normal\",\n  fontWeight: \"400\",\n  textTransform: \"none\",\n  textDecoration: \"none\",\n  textAlign: \"left\",\n  lineHeight: 1.5,\n  letterSpacing: 0,\n  wordSpacing: 0,\n  whiteSpace: \"normal\",\n  fontFamily: \"Open Sans\"\n};\n\nexport default () => {\n  const [h1, setH1] = useState<Style>({\n    ...baseStyle,\n    fontSize: 26,\n    fontWeight: \"600\"\n  });\n  const [paragraph, setParagraph] = useState<Style>({\n    ...baseStyle,\n    fontSize: 16\n  });\n\n  return (\n    <div>\n      <GoogleFonts usedFonts={[h1.fontFamily, paragraph.fontFamily]} />\n\n      <Controls style={h1} handleChange={setH1} />\n      <H1 style={h1} />\n\n      <Controls style={paragraph} handleChange={setParagraph} />\n      <Paragraph style={paragraph} />\n\n      <Converter h1={h1} p={paragraph} />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}